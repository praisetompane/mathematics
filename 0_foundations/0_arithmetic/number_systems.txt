types:
    * decimal
    * binary
    * hexadecimal
    * ...

    * decimal = base-ten positional numerical system for representing Real(ℝ) numbers (Weisstein):
        Q: Can we only represent Real numbers?
        digits = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9}
        decimal expansion = the expression/representation of a number using the decimal system
        decimal point/command = ./, 

        ... 3       2       1      0    : places/positions, P
            1000s   100s    10s    1s   : place's/position's value
            10³     10²     10¹    10⁰  : 10ⁿ | n ∈ P : each place represents a power of 10, hence base 10.

        example:
            900

            3       2       1       0
            10³*0   10²*9   10¹*0   10⁰*0
                    100*9   10*0    1*0
            0   +   900  +  0    +  0   = 900

            1234
            3       2       1       0
            10³*1   10²*2   10¹*3   10⁰*4
            1000*1  100*2   10*3    1*4
            1000    200     30      4
            1000  + 200  +  30   +  4   = 1234


    * binary = base-two numerical system for representing numbers (Khan Academy).
        Q: Are all sets of numbers representable? 
        digits = {0, 1}

            ... 3       2       1      0    : places/positions, P
                8s      4s      2s     1s   : place's/position's value
                2³      2²      2¹     2⁰   : 2ⁿ | n ∈ P : each place represents a power of 2, hence base 2.

        example:
            900
                9       8       7       6       5       4       3       2       1       0
                1       1       1       0       0       0       0       1       0       0
                2⁹*1    2⁸*1    2⁷*1    2⁶*0    2⁵*0    2⁴*0    2³*0    2²*1    2¹*0    2⁰*0
                512*1   256*1   128*1   64*0    32*0    16*0    8*0     4*1     2*0     1*0
                512     256     128     64      32      16      8       4       0       1   
                512 +   256 +   128 +   64  +   32  +   16  +   8   +   4   +   0   +   1 = 900        

        binary number patterns (Khan Academy):
            * numbers with last bit on are odd
                i.e. any number + 1 is odd
                Q: any number, including complex numbers?
            * given number of bit n,
                we can determine maximum representable number
                    formulaic: 2ⁿ - 1
                        Q: can we prove this ∀ numbers?
                    representation = all bit set to 1

                    example:
                        n = 4
                        formulaic solution: 2⁴ - 1 = 15
                        
                        representation:
                            3       2       1       0
                            1       1       1       1
                            2³*1    2²*1    2¹*1    2⁰*1
                            8*1     4*1     2*1     1*1
                            8       4       2       1
                            8   +   4   +   2   +   1 = 15


    * hexadecimal = base-16 positional numerical system (Khan Academy).

References:
    Weisstein, Eric W. "Decimal." From MathWorld--A Wolfram Web Resource. https://mathworld.wolfram.com/Decimal.html.
    Khan Academy. Binary numbers. https://www.khanacademy.org/computing/computers-and-internet/xcae6f4a7ff015e7d:digital-information/xcae6f4a7ff015e7d:binary-numbers/a/bits-and-binary.
    Khan Academy. Patterns in binary numbers. https://www.khanacademy.org/computing/computers-and-internet/xcae6f4a7ff015e7d:digital-information/xcae6f4a7ff015e7d:binary-numbers/v/patterns-in-binary-numbers.
    Khan Academy. Hexadecimal number system. https://www.khanacademy.org/math/algebra-home/alg-intro-to-algebra/algebra-alternate-number-bases/v/hexadecimal-number-system.